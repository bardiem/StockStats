// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StockStats.Data;

#nullable disable

namespace StockStats.Data.Migrations
{
    [DbContext(typeof(StockStatsDbContext))]
    [Migration("20221114141847_Adjustments")]
    partial class Adjustments
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("StockStats.Domain.Entities.Symbol", b =>
                {
                    b.Property<int>("SymbolID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SymbolID"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("SymbolName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SymbolID");

                    b.ToTable("Symbols");
                });

            modelBuilder.Entity("StockStats.Domain.Entities.SymbolPerformance", b =>
                {
                    b.Property<int>("SymbolPerformanceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SymbolPerformanceID"));

                    b.Property<decimal>("AveragePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PerformanceDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("SymbolID")
                        .HasColumnType("int");

                    b.Property<int>("UpdateFrequency")
                        .HasColumnType("int");

                    b.HasKey("SymbolPerformanceID");

                    b.HasIndex("SymbolID");

                    b.ToTable("SymbolPerformance");
                });

            modelBuilder.Entity("StockStats.Domain.Entities.SymbolPerformance", b =>
                {
                    b.HasOne("StockStats.Domain.Entities.Symbol", "Symbol")
                        .WithMany()
                        .HasForeignKey("SymbolID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Symbol");
                });
#pragma warning restore 612, 618
        }
    }
}
